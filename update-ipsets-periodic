#!/bin/bash

# check if FIREHOL_BLACKLIST exists. Otherwise setup all chains
"${IPTABLES_CMD}" -N FIREHOL_BLACKLIST  >/dev/null 2>&1 || true

# delete rule if exists and setup freshly (make sure to add to front - not AFTER RETURN AT THE END)
"${IPTABLES_CMD}" -D DOCKER-USER -p all -j FIREHOL_BLACKLIST >/dev/null 2>&1 || true
"${IPTABLES_CMD}" -I DOCKER-USER -j FIREHOL_BLACKLIST

"${IPTABLES_CMD}" -N FIREHOL_WHITELIST_MANUAL  >/dev/null 2>&1 || true

# fill WHITELIST (flush and fill)
"${IPTABLES_CMD}" -F FIREHOL_WHITELIST_MANUAL
if [ ! -z "${WHITELIST_IPS}" ];
then
    echo Adding manual IPs to FIREHOL_WHITELIST_MANUAL
    "${IPTABLES_CMD}" -A FIREHOL_WHITELIST_MANUAL -s "${WHITELIST_IPS}" -j ACCEPT
fi
"${IPTABLES_CMD}" -A FIREHOL_WHITELIST_MANUAL -j RETURN

# auto-enable lists defined in env
INIT_LIST_FLAG_FILE="/etc/firehol/lists_init.done"
if [ ! -f "${INIT_LIST_FLAG_FILE}" ]; then
  echo "First Startup: Enabling initial lists defined by env variable FIREHOL_LISTS_INIT: ${FIREHOL_LISTS_INIT}"
  for p in ${FIREHOL_LISTS_INIT}; do
    /bin/enable "${p}"
  done
  touch /etc/firehol/lists_init.done
else
  echo "Initial lists not enabling because this isn't the first start. Not modifying current list configuration" 
fi

# add whitelist rule (delete first as it might exist already)
"${IPTABLES_CMD}" -D FIREHOL_BLACKLIST -j FIREHOL_WHITELIST_MANUAL >/dev/null 2>&1 || true

"${IPTABLES_CMD}" -I FIREHOL_BLACKLIST -j FIREHOL_WHITELIST_MANUAL

for i in $(find /etc/firehol/ipsets -maxdepth 1 -name "*.enabled");
do
    i="${i##*/}"
    i="${i%.*}"
    ipset-apply $i
    if [[ -z $("${IPTABLES_CMD}" -L FIREHOL_BLACKLIST | grep "match-set $i src") ]];
    then
        "${IPTABLES_CMD}" -I FIREHOL_BLACKLIST -m set --match-set $i src -j DROP
    fi
done

# we set up all chains and create ipset lists. So now we only have to update those ipset lists
while :
do
    update-ipsets -s
    sleep $((($RANDOM % 20 + 50) * 10)) # sleeps for about 10 minutes (add random variable to avoid DDoS to iplist provider)
done
